// Generated by CoffeeScript 1.4.0
(function() {
  var Ellipsis, Equatable, Formattable, Geometry, Path, Point, Surface;

  Point = require('./point');

  Equatable = require('./equatable');

  Formattable = require('./formattable');

  Geometry = require('./geometry');

  Surface = require('./surface');

  Path = require('./path');

  Ellipsis = (function() {

    Equatable('radius1', 'radius2', 'x', 'y', 'rotation').attachTo(Ellipsis);

    Formattable('Ellipsis', 'radius1', 'radius2', 'x', 'y', 'rotation').attachTo(Ellipsis);

    function Ellipsis(r1, r2, x, y, rot, segments) {
      var _ref;
      _ref = this.ellipsisFrom(r1, r2, x, y, rot, segments), this.radius1 = _ref[0], this.radius2 = _ref[1], this.x = _ref[2], this.y = _ref[3], this.rotation = _ref[4], this.segments = _ref[5];
    }

    Ellipsis.prototype.ellipsisFrom = function(radius1, radius2, x, y, rotation, segments) {
      var _ref;
      if (typeof radius1 === 'object') {
        _ref = radius1, radius1 = _ref.radius1, radius2 = _ref.radius2, x = _ref.x, y = _ref.y, rotation = _ref.rotation, segments = _ref.segments;
      }
      if (!Point.isFloat(radius1)) {
        radius1 = 1;
      }
      if (!Point.isFloat(radius2)) {
        radius2 = 1;
      }
      if (!Point.isFloat(x)) {
        x = 0;
      }
      if (!Point.isFloat(y)) {
        y = 0;
      }
      if (!Point.isFloat(rotation)) {
        rotation = 0;
      }
      if (!Point.isFloat(segments)) {
        segments = 36;
      }
      return [radius1, radius2, x, y, rotation, segments];
    };

    return Ellipsis;

  })();

  module.exports = Ellipsis;

}).call(this);
