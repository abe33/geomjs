// Generated by CoffeeScript 1.4.0
(function() {
  var Circle, Geometry, Point;

  Point = require('./point');

  Geometry = require('./geometry');

  Circle = (function() {

    Geometry.attachTo(Circle);

    function Circle(radius, x, y, segments) {
      this.radius = radius != null ? radius : 0;
      this.x = x != null ? x : 0;
      this.y = y != null ? y : 0;
      this.segments = segments != null ? segments : 36;
    }

    Circle.prototype.top = function() {
      return this.y - this.radius;
    };

    Circle.prototype.bottom = function() {
      return this.y + this.radius;
    };

    Circle.prototype.left = function() {
      return this.x - this.radius;
    };

    Circle.prototype.right = function() {
      return this.x + this.radius;
    };

    Circle.prototype.length = function() {
      return this.radius * Math.PI * 2;
    };

    Circle.prototype.acreage = function() {
      return this.radius * this.radius * Math.PI;
    };

    Circle.prototype.points = function() {
      var n, step, _i, _ref, _results;
      step = 360 / this.segments;
      _results = [];
      for (n = _i = 0, _ref = this.segments; 0 <= _ref ? _i <= _ref : _i >= _ref; n = 0 <= _ref ? ++_i : --_i) {
        _results.push(this.pointAtAngle(n * step));
      }
      return _results;
    };

    Circle.prototype.pointAtAngle = function(angle) {
      return new Point(this.x + Math.cos(Math.degToRad(angle)) * this.radius, this.y + Math.sin(Math.degToRad(angle)) * this.radius);
    };

    Circle.prototype.equals = function(o) {
      return (o != null) && o.radius === this.radius && o.x === this.x && o.y === this.y;
    };

    return Circle;

  })();

  module.exports = Circle;

}).call(this);
