// Generated by CoffeeScript 1.4.0
(function() {
  var Formattable, Mixin,
    __slice = [].slice,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Mixin = require('./mixin');

  Formattable = function() {
    var properties;
    properties = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return Formattable = (function(_super) {

      __extends(Formattable, _super);

      function Formattable() {
        return Formattable.__super__.constructor.apply(this, arguments);
      }

      Formattable.prototype.toString = function() {
        var className, formattedProperties, p;
        className = this.constructor.name;
        formattedProperties = (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = properties.length; _i < _len; _i++) {
            p = properties[_i];
            _results.push("" + p + "=" + this[p]);
          }
          return _results;
        }).call(this);
        return "[" + className + "(" + (formattedProperties.join(', ')) + ")]";
      };

      return Formattable;

    })(Mixin);
  };

  module.exports = Formattable;

}).call(this);
