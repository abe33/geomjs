// Generated by CoffeeScript 1.4.0
(function() {
  var Mixin, Proxyable,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Mixin = require('./mixin');

  Proxyable = (function(_super) {

    __extends(Proxyable, _super);

    function Proxyable() {
      return Proxyable.__super__.constructor.apply(this, arguments);
    }

    Proxyable.included = function(klass) {
      return klass.proxyable = function(type, target) {
        var k, v;
        for (k in target) {
          v = target[k];
          v.proxyable = type;
          klass.prototype[k] = v;
        }
        return target;
      };
    };

    return Proxyable;

  })(Mixin);

  module.exports = Proxyable;

}).call(this);
