// Generated by CoffeeScript 1.4.0
(function() {
  var Cloneable, Diamond, Equatable, Formattable, Geometry, Intersections, Parameterizable, Path, Point, Surface;

  Point = require('./point');

  Equatable = require('./mixins/equatable');

  Formattable = require('./mixins/formattable');

  Cloneable = require('./mixins/cloneable');

  Parameterizable = require('./mixins/parameterizable');

  Geometry = require('./mixins/geometry');

  Surface = require('./mixins/surface');

  Path = require('./mixins/path');

  Intersections = require('./mixins/intersections');

  Diamond = (function() {
    var PROPERTIES;

    PROPERTIES = ['x', 'y', 'topLength', 'leftLength', 'bottomLength', 'rightLength'];

    Formattable.apply(Formattable, ['Diamond'].concat(PROPERTIES)).attachTo(Diamond);

    Parameterizable('diamondFrom', {
      topLength: 1,
      rightLength: 1,
      bottomLength: 1,
      leftLength: 1,
      x: 0,
      y: 0,
      rotation: 0
    }).attachTo(Diamond);

    Equatable.apply(Equatable, PROPERTIES).attachTo(Diamond);

    Cloneable.attachTo(Diamond);

    Geometry.attachTo(Diamond);

    function Diamond(topLength, rightLength, bottomLength, leftLength, x, y, rotation) {
      var args;
      args = this.diamondFrom(topLength, rightLength, bottomLength, leftLength, x, y, rotation);
      this.topLength = args.topLength, this.rightLength = args.rightLength, this.bottomLength = args.bottomLength, this.leftLength = args.leftLength, this.x = args.x, this.y = args.y, this.rotation = args.rotation;
    }

    Diamond.prototype.center = function() {
      return new Point(this.x, this.y);
    };

    Diamond.prototype.topAxis = function() {
      return new Point(0, -this.topLength).rotate(this.rotation);
    };

    Diamond.prototype.bottomAxis = function() {
      return new Point(0, this.bottomLength).rotate(this.rotation);
    };

    Diamond.prototype.leftAxis = function() {
      return new Point(-this.leftLength, 0).rotate(this.rotation);
    };

    Diamond.prototype.rightAxis = function() {
      return new Point(this.rightLength, 0).rotate(this.rotation);
    };

    Diamond.prototype.topCorner = function() {
      return this.center().add(this.topAxis());
    };

    Diamond.prototype.bottomCorner = function() {
      return this.center().add(this.bottomAxis());
    };

    Diamond.prototype.leftCorner = function() {
      return this.center().add(this.leftAxis());
    };

    Diamond.prototype.rightCorner = function() {
      return this.center().add(this.rightAxis());
    };

    Diamond.prototype.topLeftEdge = function() {
      return this.topCorner().subtract(this.leftCorner());
    };

    Diamond.prototype.topRightEdge = function() {
      return this.rightCorner().subtract(this.topCorner());
    };

    Diamond.prototype.bottomLeftEdge = function() {
      return this.leftCorner().subtract(this.bottomCorner());
    };

    Diamond.prototype.bottomRightEdge = function() {
      return this.bottomCorner().subtract(this.rightCorner());
    };

    Diamond.prototype.points = function() {
      var t;
      return [t = this.topCorner(), this.rightCorner(), this.bottomCorner(), this.leftCorner(), t];
    };

    Diamond.prototype.closedGeometry = function() {
      return true;
    };

    return Diamond;

  })();

  module.exports = Diamond;

}).call(this);
